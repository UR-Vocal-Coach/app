{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww15380\viewh11460\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Algorithm for checking pitch:\
\
1. take input pitch, set value as "x"\
\
2. Set acceptable range: x (Hz) / 1200 = 1 cent.  --> acceptable range.\
\
/* 0.15 is arbitrary and we can change it if we so desire */\
2. define scale as x +/- 0.15x\
\
/* note: there are ALWAYS 1200 cents in one octave.  So as you get higher in pitch there are more hertz per cent, and vice versa.  We may have to play around with different threshold values for the sensitivity of the tuner.\
*/\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
3. instantiate y = some value.\
\
4. instantiate Tcurr = 0\
\
5. instantiate Tinit = 0\
\
6. instantiate boolean first = true\
\
while(Tcurr - Tinit < 2000)\{\
\
7. take input pitch, set value as "y"\
\
8. if((x - y) < x + 0.15x)\{\
alert("too high!")\
\}\
\
9. if((x - y) > x - 0.15x)\{\
alert("too low!")\
\}\
\
// (x + x/1200) == x + 2 cents.\
\
// double check on this part...\
\
10. if(abs(x - y) < (x+ x/1200))\{\
\
if(first == true)\{\
Tinit = system.getCurrentTime()\
Tcurr = system.getCurrentTime()\
\}\
else\{\
Tcurr = system.getCurrentTime()\
\}\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 else\{\
first == false\
\}\
9. display marker at position = (1 - (x - y)/(x + 0.15x))\
\
10. \
\}\
}